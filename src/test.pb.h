//// Generated by the protocol buffer compiler.  DO NOT EDIT!
//// source: test.proto
//
//#ifndef PROTOBUF_test_2eproto__INCLUDED
//#define PROTOBUF_test_2eproto__INCLUDED
//
//#include <string>
//
//#include <google/protobuf/stubs/common.h>
//
//#if GOOGLE_PROTOBUF_VERSION < 2006000
//#error This file was generated by a newer version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please update
//#error your headers.
//#endif
//#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
//#error This file was generated by an older version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please
//#error regenerate this file with a newer version of protoc.
//#endif
//
//#include <google/protobuf/generated_message_util.h>
//#include <google/protobuf/message.h>
//#include <google/protobuf/repeated_field.h>
//#include <google/protobuf/extension_set.h>
//#include <google/protobuf/unknown_field_set.h>
//// @@protoc_insertion_point(includes)
//
//// Internal implementation detail -- do not call these.
//void  protobuf_AddDesc_test_2eproto();
//void protobuf_AssignDesc_test_2eproto();
//void protobuf_ShutdownFile_test_2eproto();
//
//class MsgInfo;
//
//// ===================================================================
//
//class MsgInfo : public ::google::protobuf::Message {
// public:
//  MsgInfo();
//  virtual ~MsgInfo();
//
//  MsgInfo(const MsgInfo& from);
//
//  inline MsgInfo& operator=(const MsgInfo& from) {
//    CopyFrom(from);
//    return *this;
//  }
//
//  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
//    return _unknown_fields_;
//  }
//
//  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
//    return &_unknown_fields_;
//  }
//
//  static const ::google::protobuf::Descriptor* descriptor();
//  static const MsgInfo& default_instance();
//
//  void Swap(MsgInfo* other);
//
//  // implements Message ----------------------------------------------
//
//  MsgInfo* New() const;
//  void CopyFrom(const ::google::protobuf::Message& from);
//  void MergeFrom(const ::google::protobuf::Message& from);
//  void CopyFrom(const MsgInfo& from);
//  void MergeFrom(const MsgInfo& from);
//  void Clear();
//  bool IsInitialized() const;
//
//  int ByteSize() const;
//  bool MergePartialFromCodedStream(
//      ::google::protobuf::io::CodedInputStream* input);
//  void SerializeWithCachedSizes(
//      ::google::protobuf::io::CodedOutputStream* output) const;
//  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
//  int GetCachedSize() const { return _cached_size_; }
//  private:
//  void SharedCtor();
//  void SharedDtor();
//  void SetCachedSize(int size) const;
//  public:
//  ::google::protobuf::Metadata GetMetadata() const;
//
//  // nested types ----------------------------------------------------
//
//  // accessors -------------------------------------------------------
//
//  // required int32 time = 1;
//  inline bool has_time() const;
//  inline void clear_time();
//  static const int kTimeFieldNumber = 1;
//  inline ::google::protobuf::int32 time() const;
//  inline void set_time(::google::protobuf::int32 value);
//
//  // optional string name = 2;
//  inline bool has_name() const;
//  inline void clear_name();
//  static const int kNameFieldNumber = 2;
//  inline const ::std::string& name() const;
//  inline void set_name(const ::std::string& value);
//  inline void set_name(const char* value);
//  inline void set_name(const char* value, size_t size);
//  inline ::std::string* mutable_name();
//  inline ::std::string* release_name();
//  inline void set_allocated_name(::std::string* name);
//
//  // optional string from = 3;
//  inline bool has_from() const;
//  inline void clear_from();
//  static const int kFromFieldNumber = 3;
//  inline const ::std::string& from() const;
//  inline void set_from(const ::std::string& value);
//  inline void set_from(const char* value);
//  inline void set_from(const char* value, size_t size);
//  inline ::std::string* mutable_from();
//  inline ::std::string* release_from();
//  inline void set_allocated_from(::std::string* from);
//
//  // @@protoc_insertion_point(class_scope:MsgInfo)
// private:
//  inline void set_has_time();
//  inline void clear_has_time();
//  inline void set_has_name();
//  inline void clear_has_name();
//  inline void set_has_from();
//  inline void clear_has_from();
//
//  ::google::protobuf::UnknownFieldSet _unknown_fields_;
//
//  ::google::protobuf::uint32 _has_bits_[1];
//  mutable int _cached_size_;
//  ::std::string* name_;
//  ::std::string* from_;
//  ::google::protobuf::int32 time_;
//  friend void  protobuf_AddDesc_test_2eproto();
//  friend void protobuf_AssignDesc_test_2eproto();
//  friend void protobuf_ShutdownFile_test_2eproto();
//
//  void InitAsDefaultInstance();
//  static MsgInfo* default_instance_;
//};
//// ===================================================================
//
//
//// ===================================================================
//
//// MsgInfo
//
//// required int32 time = 1;
//inline bool MsgInfo::has_time() const {
//  return (_has_bits_[0] & 0x00000001u) != 0;
//}
//inline void MsgInfo::set_has_time() {
//  _has_bits_[0] |= 0x00000001u;
//}
//inline void MsgInfo::clear_has_time() {
//  _has_bits_[0] &= ~0x00000001u;
//}
//inline void MsgInfo::clear_time() {
//  time_ = 0;
//  clear_has_time();
//}
//inline ::google::protobuf::int32 MsgInfo::time() const {
//  // @@protoc_insertion_point(field_get:MsgInfo.time)
//  return time_;
//}
//inline void MsgInfo::set_time(::google::protobuf::int32 value) {
//  set_has_time();
//  time_ = value;
//  // @@protoc_insertion_point(field_set:MsgInfo.time)
//}
//
//// optional string name = 2;
//inline bool MsgInfo::has_name() const {
//  return (_has_bits_[0] & 0x00000002u) != 0;
//}
//inline void MsgInfo::set_has_name() {
//  _has_bits_[0] |= 0x00000002u;
//}
//inline void MsgInfo::clear_has_name() {
//  _has_bits_[0] &= ~0x00000002u;
//}
//inline void MsgInfo::clear_name() {
//  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    name_->clear();
//  }
//  clear_has_name();
//}
//inline const ::std::string& MsgInfo::name() const {
//  // @@protoc_insertion_point(field_get:MsgInfo.name)
//  return *name_;
//}
//inline void MsgInfo::set_name(const ::std::string& value) {
//  set_has_name();
//  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    name_ = new ::std::string;
//  }
//  name_->assign(value);
//  // @@protoc_insertion_point(field_set:MsgInfo.name)
//}
//inline void MsgInfo::set_name(const char* value) {
//  set_has_name();
//  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    name_ = new ::std::string;
//  }
//  name_->assign(value);
//  // @@protoc_insertion_point(field_set_char:MsgInfo.name)
//}
//inline void MsgInfo::set_name(const char* value, size_t size) {
//  set_has_name();
//  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    name_ = new ::std::string;
//  }
//  name_->assign(reinterpret_cast<const char*>(value), size);
//  // @@protoc_insertion_point(field_set_pointer:MsgInfo.name)
//}
//inline ::std::string* MsgInfo::mutable_name() {
//  set_has_name();
//  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    name_ = new ::std::string;
//  }
//  // @@protoc_insertion_point(field_mutable:MsgInfo.name)
//  return name_;
//}
//inline ::std::string* MsgInfo::release_name() {
//  clear_has_name();
//  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    return NULL;
//  } else {
//    ::std::string* temp = name_;
//    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//    return temp;
//  }
//}
//inline void MsgInfo::set_allocated_name(::std::string* name) {
//  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    delete name_;
//  }
//  if (name) {
//    set_has_name();
//    name_ = name;
//  } else {
//    clear_has_name();
//    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//  }
//  // @@protoc_insertion_point(field_set_allocated:MsgInfo.name)
//}
//
//// optional string from = 3;
//inline bool MsgInfo::has_from() const {
//  return (_has_bits_[0] & 0x00000004u) != 0;
//}
//inline void MsgInfo::set_has_from() {
//  _has_bits_[0] |= 0x00000004u;
//}
//inline void MsgInfo::clear_has_from() {
//  _has_bits_[0] &= ~0x00000004u;
//}
//inline void MsgInfo::clear_from() {
//  if (from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    from_->clear();
//  }
//  clear_has_from();
//}
//inline const ::std::string& MsgInfo::from() const {
//  // @@protoc_insertion_point(field_get:MsgInfo.from)
//  return *from_;
//}
//inline void MsgInfo::set_from(const ::std::string& value) {
//  set_has_from();
//  if (from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    from_ = new ::std::string;
//  }
//  from_->assign(value);
//  // @@protoc_insertion_point(field_set:MsgInfo.from)
//}
//inline void MsgInfo::set_from(const char* value) {
//  set_has_from();
//  if (from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    from_ = new ::std::string;
//  }
//  from_->assign(value);
//  // @@protoc_insertion_point(field_set_char:MsgInfo.from)
//}
//inline void MsgInfo::set_from(const char* value, size_t size) {
//  set_has_from();
//  if (from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    from_ = new ::std::string;
//  }
//  from_->assign(reinterpret_cast<const char*>(value), size);
//  // @@protoc_insertion_point(field_set_pointer:MsgInfo.from)
//}
//inline ::std::string* MsgInfo::mutable_from() {
//  set_has_from();
//  if (from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    from_ = new ::std::string;
//  }
//  // @@protoc_insertion_point(field_mutable:MsgInfo.from)
//  return from_;
//}
//inline ::std::string* MsgInfo::release_from() {
//  clear_has_from();
//  if (from_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    return NULL;
//  } else {
//    ::std::string* temp = from_;
//    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//    return temp;
//  }
//}
//inline void MsgInfo::set_allocated_from(::std::string* from) {
//  if (from_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
//    delete from_;
//  }
//  if (from) {
//    set_has_from();
//    from_ = from;
//  } else {
//    clear_has_from();
//    from_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
//  }
//  // @@protoc_insertion_point(field_set_allocated:MsgInfo.from)
//}
//
//
//// @@protoc_insertion_point(namespace_scope)
//
//#ifndef SWIG
//namespace google {
//namespace protobuf {
//
//
//}  // namespace google
//}  // namespace protobuf
//#endif  // SWIG
//
//// @@protoc_insertion_point(global_scope)
//
//#endif  // PROTOBUF_test_2eproto__INCLUDED
